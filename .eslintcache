[{"/Users/able/FulltimeForceTask/take-home-test/src/services/index.ts":"1","/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/UserProfile/index.tsx":"2","/Users/able/FulltimeForceTask/take-home-test/src/components/atoms/Pill/index.tsx":"3","/Users/able/FulltimeForceTask/take-home-test/src/components/layout/index.ts":"4","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/index.ts":"5","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/Search/index.tsx":"6","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/RepoList/index.tsx":"7","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/UsersList/index.tsx":"8","/Users/able/FulltimeForceTask/take-home-test/src/components/atoms/Card/index.tsx":"9","/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/Home/index.tsx":"10"},{"size":1750,"mtime":1610384754108,"results":"11","hashOfConfig":"12"},{"size":5001,"mtime":1610385548325,"results":"13","hashOfConfig":"12"},{"size":611,"mtime":1610382667464,"results":"14","hashOfConfig":"12"},{"size":93,"mtime":1610252803718,"results":"15","hashOfConfig":"12"},{"size":173,"mtime":1610384659971,"results":"16","hashOfConfig":"12"},{"size":3531,"mtime":1610330091308,"results":"17","hashOfConfig":"12"},{"size":1422,"mtime":1610384919828,"results":"18","hashOfConfig":"12"},{"size":1330,"mtime":1610385466922,"results":"19","hashOfConfig":"12"},{"size":699,"mtime":1610385216560,"results":"20","hashOfConfig":"12"},{"size":1466,"mtime":1610385525873,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f072xl",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/able/FulltimeForceTask/take-home-test/src/services/index.ts",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/UserProfile/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/atoms/Pill/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/layout/index.ts",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/index.ts",["43"],"/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/Search/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/RepoList/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/UsersList/index.tsx",["44","45"],"/Users/able/FulltimeForceTask/take-home-test/src/components/atoms/Card/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/Home/index.tsx",["46","47"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FlexContainer, Typography, Button } from 'components/atoms';\nimport { Search, UsersList } from 'components/molecules';\nimport theme from 'util/theme';\n\nconst HomeContainer = styled(FlexContainer)`\n  display: block;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst Home: React.FC<{ path: string; users: any }> = ({ users }) => {\n  const [inputValue, setInputValue] = useState<string>('');\n\n  return (\n    <HomeContainer container direction='column'>\n      <FlexContainer container justify='center' alignItems='center'>\n        <FlexContainer width='80%' direction='column'>\n          <Search\n            height='60px'\n            width='100%'\n            placeholder='Username here'\n            searchValue={inputValue}\n            onSubmit={() => console.log('ga')}\n            onChangeValue={(value: string) => setInputValue(value)}\n          />\n          <Button\n            height='60px'\n            width='200px'\n            padding='15px'\n            bgColor={theme.colors.darkBgColor}\n            onClick={() => console.log('go')}\n          >\n            Search\n          </Button>\n        </FlexContainer>\n      </FlexContainer>\n\n      <FlexContainer\n        container\n        direction='column'\n        alignItems='center'\n        margin='20px 0'\n      >\n        <UsersList users={users} />\n      </FlexContainer>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n",{"ruleId":"48","severity":1,"message":"49","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":21,"column":34,"nodeType":"54","messageId":"55","endLine":21,"endColumn":37,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"53","line":37,"column":36,"nodeType":"54","messageId":"55","endLine":37,"endColumn":39,"suggestions":"57"},{"ruleId":"48","severity":1,"message":"58","line":3,"column":25,"nodeType":"50","messageId":"51","endLine":3,"endColumn":35},{"ruleId":"52","severity":1,"message":"53","line":14,"column":45,"nodeType":"54","messageId":"55","endLine":14,"endColumn":48,"suggestions":"59"},"@typescript-eslint/no-unused-vars","'RepoList' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["60","61"],["62","63"],"'Typography' is defined but never used.",["64","65"],{"messageId":"66","fix":"67","desc":"68"},{"messageId":"69","fix":"70","desc":"71"},{"messageId":"66","fix":"72","desc":"68"},{"messageId":"69","fix":"73","desc":"71"},{"messageId":"66","fix":"74","desc":"68"},{"messageId":"69","fix":"75","desc":"71"},"suggestUnknown",{"range":"76","text":"77"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"76","text":"78"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"79","text":"77"},{"range":"79","text":"78"},{"range":"80","text":"77"},{"range":"80","text":"78"},[447,450],"unknown","never",[962,965],[395,398]]