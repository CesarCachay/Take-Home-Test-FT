[{"/Users/able/FulltimeForceTask/take-home-test/src/services/index.ts":"1","/Users/able/FulltimeForceTask/take-home-test/src/components/layout/NotFound/index.tsx":"2","/Users/able/FulltimeForceTask/take-home-test/src/App.tsx":"3","/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/UserProfile/index.tsx":"4","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/index.ts":"5","/Users/able/FulltimeForceTask/take-home-test/src/components/atoms/Button/index.tsx":"6","/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/Home/index.tsx":"7","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/UsersList/index.tsx":"8"},{"size":1750,"mtime":1610384754108,"results":"9","hashOfConfig":"10"},{"size":545,"mtime":1610291788198,"results":"11","hashOfConfig":"10"},{"size":1616,"mtime":1610386292573,"results":"12","hashOfConfig":"10"},{"size":5001,"mtime":1610385548325,"results":"13","hashOfConfig":"10"},{"size":183,"mtime":1610384662618,"results":"14","hashOfConfig":"10"},{"size":828,"mtime":1610330077221,"results":"15","hashOfConfig":"10"},{"size":1879,"mtime":1610387580366,"results":"16","hashOfConfig":"10"},{"size":1498,"mtime":1610387766561,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"f072xl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/able/FulltimeForceTask/take-home-test/src/services/index.ts",[],["38","39","40"],"/Users/able/FulltimeForceTask/take-home-test/src/components/layout/NotFound/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/App.tsx",["41"],"import React, { useState, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ThemeProvider } from 'styled-components';\nimport { SnackbarProvider } from 'notistack';\nimport { getUsers } from 'services';\nimport { Router } from '@reach/router';\nimport { Navbar } from 'components/molecules';\nimport { Home, UserProfile, UserRepo } from 'components/organisms';\nimport { About, NotFound } from 'components/layout';\nimport theme from 'util/theme';\n\nconst App: React.FC = () => {\n  const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Open-Sans, Helvetica, Sans-Serif;\n  }\n`;\n  const [usersList, setUsersList] = useState([]);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    getUsers()\n      .then((response) => {\n        const { data } = response;\n        setUsersList(data);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Navbar />\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider\n          maxSnack={3}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n        >\n          <Router>\n            <Home path='/' users={usersList} />\n            <UserProfile path='/user/:userName' userName='/:userName' />\n            <UserRepo path='/user/:userName/:repo' />\n            <About path='/about' />\n            <NotFound default />\n          </Router>\n      </ThemeProvider>\n      </SnackbarProvider>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/UserProfile/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/index.ts",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/atoms/Button/index.tsx",[],"/Users/able/FulltimeForceTask/take-home-test/src/components/organisms/Home/index.tsx",["42"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSnackbar } from 'notistack';\nimport { FlexContainer, Button } from 'components/atoms';\nimport { Search, UsersList } from 'components/molecules';\nimport theme from 'util/theme';\nimport { HomeProps } from './types';\n\nconst HomeContainer = styled(FlexContainer)`\n  display: block;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst Home: React.FC<HomeProps> = ({ users }) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [inputValue, setInputValue] = useState<string>('');\n  const [usersList, setUsersList] = useState([]);\n\n  useEffect(() => {\n    if (users.length > 0) {\n      const modifiedUserInfo = users.map((user) => ({\n        id: user.id,\n        avatarUrl: user.avatar_url,\n        name: user.login,\n      }));\n      setUsersList(modifiedUserInfo);\n    }\n  }, [users]);\n\n  return (\n    <HomeContainer container direction='column'>\n      <FlexContainer container justify='center' alignItems='center'>\n        <FlexContainer width='80%' direction='column'>\n          <Search\n            height='60px'\n            width='100%'\n            placeholder='Username here'\n            searchValue={inputValue}\n            onSubmit={() => console.log('ga')}\n            onChangeValue={(value: string) => setInputValue(value)}\n          />\n          <Button\n            height='60px'\n            width='200px'\n            padding='15px'\n            bgColor={theme.colors.darkBgColor}\n            onClick={() => console.log('go')}\n          >\n            Search\n          </Button>\n        </FlexContainer>\n      </FlexContainer>\n\n      <FlexContainer\n        container\n        direction='column'\n        alignItems='center'\n        margin='20px 0'\n      >\n        <UsersList users={usersList} />\n      </FlexContainer>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","/Users/able/FulltimeForceTask/take-home-test/src/components/molecules/UsersList/index.tsx",["43"],"/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '@reach/router';\nimport {\n  FlexContainer,\n  Typography,\n  Card,\n  Button,\n  Spinner,\n} from 'components/atoms';\nimport theme from 'util/theme';\nimport { UsersListProps, UserItemProps, UserType } from './types';\n\nconst UsersContainer = styled(FlexContainer)`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  padding: 10px;\n  margin: 0 30px;\n  background-color: black;\n  text-decoration: none;\n\n  &:hover {\n    color: ${theme.colors.placeholderColor};\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst UserItem: React.FC<UserItemProps> = ({ user }) => (\n  <Card shadowLow width='300px'>\n    <img src={user.avatarUrl} alt='user-profile' style={{ width: '60px', borderRadius: '100%' }} />\n    <Typography margin='10px 0' fontSize='20px'>{user.name}</Typography>\n    <StyledLink to={`user/${user.name}`} title='more-info'>\n      More\n    </StyledLink>\n  </Card>\n);\n\nconst UsersList: React.FC<UsersListProps> = ({ users }) => {\n  return (\n    <FlexContainer container>\n      {users.length > 0 ? (\n        <UsersContainer justify='space-around'>\n          {users.map((user: UserType) => (\n            <UserItem user={user} key={user.id} />\n          ))}\n        </UsersContainer>\n      ) : (\n          <Spinner />\n        )}\n    </FlexContainer>\n  );\n};\n\nexport default UsersList;\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":null,"fatal":true,"severity":2,"message":"50","line":53,"column":6},{"ruleId":"51","severity":1,"message":"52","line":17,"column":11,"nodeType":"53","messageId":"54","endLine":17,"endColumn":26},{"ruleId":"51","severity":1,"message":"55","line":9,"column":3,"nodeType":"53","messageId":"54","endLine":9,"endColumn":9},"jsx-a11y/accessible-emoji",[],"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"Parsing error: Expected corresponding JSX closing tag for 'SnackbarProvider'.","@typescript-eslint/no-unused-vars","'enqueueSnackbar' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]